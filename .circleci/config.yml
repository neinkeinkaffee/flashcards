version: 2.1
jobs:
  test:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - checkout

      - run:
          name: Store commit hash of last successful build in BASH_ENV
          command: echo "export LAST_BUILD_COMMIT_HASH=$(curl -Ss -u "${CIRCLE_API_USER_TOKEN}:" "https://circleci.com/api/v1.1/project/github/neinkeinkaffee/flashcards?filter=completed&limit=1" | jq -r '.[0]["vcs_revision"]')" >> $BASH_ENV

      - run:
          name: Print commit hash of last successful build
          command: echo $LAST_BUILD_COMMIT_HASH

      - run:
          name: Run frontend unit tests
          command: ./scripts/test.sh js

      - run:
          name: Run backend unit tests
          command: ./scripts/test.sh flask

      - run:
          name: Run end-to-end test
          command: ./scripts/test.sh e2e

  build:
    docker:
      - image: circleci/python:3.7.2
    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Store commit hash of last successful build in BASH_ENV
          command: echo "export LAST_BUILD_COMMIT_HASH=$(curl -Ss -u "${CIRCLE_API_USER_TOKEN}:" "https://circleci.com/api/v1.1/project/github/neinkeinkaffee/flashcards?filter=completed&limit=2" | jq -r '.[1]["vcs_revision"]')" >> $BASH_ENV

      - run:
            name: Print commit hash of last successful build
            command: echo $LAST_BUILD_COMMIT_HASH

      - run:
          name: Build and push Docker images
          command: ./scripts/build.sh $LAST_BUILD_COMMIT_HASH

  deploy:
    docker:
      - image: circleci/python:3.7.2
    steps:
      - checkout

      - run:
          name: Store commit hash of last successful build in BASH_ENV
          command: echo "export LAST_BUILD_COMMIT_HASH=$(curl -Ss -u "${CIRCLE_API_USER_TOKEN}:" "https://circleci.com/api/v1.1/project/github/neinkeinkaffee/flashcards?filter=completed&limit=2" | jq -r '.[1]["vcs_revision"]')" >> $BASH_ENV

      - run:
          name: Print commit hash of last successful build
          command: echo $LAST_BUILD_COMMIT_HASH

      - run:
          name: Install terraform
          command: |
            (sudo apt-get update || sudo apt-get update) && sudo apt-get install -y apt-transport-https gnupg software-properties-common curl && \
            curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add - && \
            sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main" && \
            sudo apt-get update && sudo apt-get install -y terraform

      - run:
          name: Deploy services
          command: ./scripts/deploy.sh

      - run:
          name: Install kubectl
          command: |
            (sudo apt-get update || sudo apt-get update) && sudo apt-get install -y apt-transport-https ca-certificates curl && \
            sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg && \
            echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list && \
            sudo apt-get update && sudo apt-get install -y kubectl

      - run:
          name: Create, migrate and seed database
          command: ./scripts/init.sh

orbs:
  browser-tools: circleci/browser-tools@1.1.3

workflows:
  test_and_build:
    jobs:
      - deploy
#      - deploy:
#          requires:
#            - build
      - test:
          requires:
            - deploy
      - build:
          requires:
            - test
